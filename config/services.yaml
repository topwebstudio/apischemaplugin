services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\Twig\Extensions:
        public: true  
        arguments: ['@doctrine.orm.entity_manager', '@service_container']     
        tags:
            - { name: twig.extension } 

    app.menu_builder:
        public: true  
        class: 'App\Menu\Menu'
        arguments:
            - "@knp_menu.factory"

    app.main_menu:
        public: true  
        class: Knp\Menu\MenuItem 
        factory: ["@app.menu_builder", menu]
        arguments: ["@request_stack"]
        tags:
            - { name: knp_menu.menu, alias: menu } # The alias is what is used to retrieve the menu

    request_listener:
        class: 'App\EventListener\RequestListener'
        arguments:
            - "@service_container"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: '-255'  }
    
    customer_api:
        public: true  
        class: App\EventListener\Api
        arguments:
            - "@service_container"

    helpers:
        public: true  
        class: App\Services\Helpers
        arguments: ["@service_container"]

    entity.event.subscriber:
        class: App\EventListener\EntitySubscriber
        arguments: ['@service_container']
        tags: 
          - { name: doctrine.event_subscriber }


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
